% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recode_column_values.R
\name{recode_df_with_config}
\alias{recode_df_with_config}
\title{Recode Dataframe With Config
This function replaces values in a character column. If the Config
has "replace_values" field, this will be the mapping used. If the parameter
list has a "deafult_replace", anything not in the replace values list will be
replaced by this value. If the Config has a "na_replace" field NA
values will be replaced by this.}
\usage{
recode_df_with_config(tbl, config)
}
\arguments{
\item{tbl}{A tibble

data <-  dplyr::tribble(
~col1, ~col2,
"a",   "c",
"a",   "d",
"b",   NA
)}

\item{config}{A list with a named list named "columns" that has an entry
for each column needed in the tibble. Each column must have a "name",
and "type" field. Optional fields include "replace_values", "display_name",
"na_replace", and "deafult_replace".

config1 <- list(
"columns" = list(
"col1" = list(
"name" = "col1",
"type" = "character",
"replace_values" = list(
"a" = "A"
)
),
"col2" = list(
"name" = "col2",
"type" = "character",
"replace_values" = list(
"c" = "C"
),
"na_replace" = "Missing",
"default_replace" = "Other"
)
)}
}
\description{
It is assumed that this table has been run through
concatenate_df_list_columns_with_config, as columns of type character,
and those that were of list:character will be recoded.
}
